interface Tokenizable < > extends Thing { fun tokenize < > ( ) : String < > ; } interface Sizeable < > extends Thing { fun size < > ( ) : Integer < > ; } class StringPair < > ( str1 : String < > , str2 : String < > ) extends Tokenizable < > & Sizeable < > { super ( ) ; fun tokenize < > ( ) : String < > return "(" ++ str1 ++ "," ++ str2 ++ ")" ; fun size < > ( ) : Integer < > return 2 ; } pair1 := StringPair < > ( "hello" , "world" ) ; return pair1 . tokenize < > ( ) ;